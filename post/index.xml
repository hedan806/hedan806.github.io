<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Honlyc - Your are free</title>
    <link>http://www.honlyc.com/post/</link>
    <description>Recent content in Posts on Honlyc - Your are free</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 02 Mar 2021 10:22:00 +0800</lastBuildDate><atom:link href="http://www.honlyc.com/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>nGrinder 压测工具的使用</title>
      <link>http://www.honlyc.com/post/ngrinder-in-action/</link>
      <pubDate>Tue, 02 Mar 2021 10:22:00 +0800</pubDate>
      
      <guid>http://www.honlyc.com/post/ngrinder-in-action/</guid>
      <description>前言 我们在程序上线前，应该做好完备的测试工作：单元测试、集成测试等，同样的，压力测试也是一个重要指标，每次上线时的压力测试，可以直观地反应出</description>
    </item>
    
    <item>
      <title>MeterRegistry out to MetricRegistry</title>
      <link>http://www.honlyc.com/post/metrics-meterregistry-to-metricregistry/</link>
      <pubDate>Mon, 01 Mar 2021 17:21:12 +0800</pubDate>
      
      <guid>http://www.honlyc.com/post/metrics-meterregistry-to-metricregistry/</guid>
      <description>前言 在使用SpringBoot时，没有用默认的Tomcat容器，而是用的Undertow容器。 在线上使用时，发现没有对容器的线程池做监控，无</description>
    </item>
    
    <item>
      <title>Lucene Pure Negative Booleanquery</title>
      <link>http://www.honlyc.com/post/lucene-negative-booleanquery/</link>
      <pubDate>Wed, 24 Feb 2021 16:00:05 +0800</pubDate>
      
      <guid>http://www.honlyc.com/post/lucene-negative-booleanquery/</guid>
      <description>问题 在开发中遇到一个情况，在直接使用Lucene查询时，使用查询语句： 1 hk (-cs) 无法查出内容： 1 security in hk 但是使用hk -(cs)又是可以的。 同时，还</description>
    </item>
    
    <item>
      <title>Elasticsearch Scroll Performance</title>
      <link>http://www.honlyc.com/post/elasticsearch-scroll-performance/</link>
      <pubDate>Tue, 09 Feb 2021 13:12:46 +0800</pubDate>
      
      <guid>http://www.honlyc.com/post/elasticsearch-scroll-performance/</guid>
      <description>前言 因为业务关系，我们需要从 ES 中查询出超大量的数据。其中又分为天索引及历史索引，天索引使用堆外内存进行优化，查询和索引都先走内存索引，提高效</description>
    </item>
    
    <item>
      <title>Gradle in Action 1</title>
      <link>http://www.honlyc.com/post/gradle-in-action-1/</link>
      <pubDate>Fri, 05 Feb 2021 10:51:18 +0800</pubDate>
      
      <guid>http://www.honlyc.com/post/gradle-in-action-1/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Elasticsearch 源码解析 Q&amp;A</title>
      <link>http://www.honlyc.com/post/elasticsearch-src-qa/</link>
      <pubDate>Tue, 26 Jan 2021 17:38:41 +0800</pubDate>
      
      <guid>http://www.honlyc.com/post/elasticsearch-src-qa/</guid>
      <description>1. AccessControlException 在调试ES源码时，如果我们需要直接用到FSDirectory.open(Paths.get(indexPath));这种的话，通常会碰到</description>
    </item>
    
    <item>
      <title>Flink in Action (2)-Flink 使用 Hadoop 进行存储</title>
      <link>http://www.honlyc.com/post/flink-in-action-2/</link>
      <pubDate>Sat, 10 Oct 2020 11:25:18 +0800</pubDate>
      
      <guid>http://www.honlyc.com/post/flink-in-action-2/</guid>
      <description>本文基于 Hadoop-2.8.3 和 Flink-1.11.2-scala-2.11 问题 Hadoop classpath/dependencies 这个问题主要是在 flink 中，没有hadoop 的 jar 包，需要手动下载并拷贝到${FLINK_HOME}/lib目录下。 可以在ht</description>
    </item>
    
    <item>
      <title>Flink in Action (1)-使用 Gradle 开发 Flink 程序</title>
      <link>http://www.honlyc.com/post/flink-in-action-1/</link>
      <pubDate>Fri, 18 Sep 2020 15:01:21 +0800</pubDate>
      
      <guid>http://www.honlyc.com/post/flink-in-action-1/</guid>
      <description>本文基于 Gradle-6.3 和 Flink-1.11.2-scala-2.11 [TOC] 环境要求 gradle 3.0 以上 java 8.* 以上 创建项目 创建目录 1 2 mkdir flink-quickstart cd flink-quickstart 初始化 gradle 文件 编辑 build.gradle 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27</description>
    </item>
    
    <item>
      <title>Linux Decompiler Java Class</title>
      <link>http://www.honlyc.com/post/linux-decompiler-java-class/</link>
      <pubDate>Wed, 19 Aug 2020 10:01:49 +0800</pubDate>
      
      <guid>http://www.honlyc.com/post/linux-decompiler-java-class/</guid>
      <description>场景 有时候，我们需要在服务器上看对应类是否有修改，或者代码是否正确，就需要在服务器上进行反编译了。这里，介绍一个常用的class反编译工具：</description>
    </item>
    
    <item>
      <title>Lucene Ram Format</title>
      <link>http://www.honlyc.com/post/lucene-ram-format/</link>
      <pubDate>Fri, 14 Aug 2020 18:39:13 +0800</pubDate>
      
      <guid>http://www.honlyc.com/post/lucene-ram-format/</guid>
      <description> DirectPostingFormat   </description>
    </item>
    
    <item>
      <title>Elasticsearch esrally 基准测试</title>
      <link>http://www.honlyc.com/post/elasticsearch-esrally-loadtest/</link>
      <pubDate>Tue, 02 Jun 2020 14:00:47 +0800</pubDate>
      
      <guid>http://www.honlyc.com/post/elasticsearch-esrally-loadtest/</guid>
      <description>前言 esrally是Elasticsearch官方出的集群基准测试框架，使用Python编写的。它的工作原理是：先下载需要测试的数据集，然后</description>
    </item>
    
    <item>
      <title>Flink for Docker Compose</title>
      <link>http://www.honlyc.com/post/flink-for-docker-compose/</link>
      <pubDate>Fri, 29 May 2020 16:45:27 +0800</pubDate>
      
      <guid>http://www.honlyc.com/post/flink-for-docker-compose/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Ambari 支持多集群管理</title>
      <link>http://www.honlyc.com/post/ambari-manage-multi-cluster/</link>
      <pubDate>Tue, 14 Apr 2020 16:34:08 +0800</pubDate>
      
      <guid>http://www.honlyc.com/post/ambari-manage-multi-cluster/</guid>
      <description>**注意： 本文使用的版本是Ambari 2.7.4 ** 场景 在使用Ambari的时候，它本身默认是只能管理一个集群的。这在实际使用的时候，会比较不方便，尤</description>
    </item>
    
    <item>
      <title>在 Elasticsearch Docker 容器中，导出堆栈信息</title>
      <link>http://www.honlyc.com/post/elasticsearch-docker-jvm/</link>
      <pubDate>Tue, 31 Mar 2020 11:23:47 +0800</pubDate>
      
      <guid>http://www.honlyc.com/post/elasticsearch-docker-jvm/</guid>
      <description>[TOC] 场景 因为在集群中，GC频繁： 初步排查 该集群的Heap是分配了 32G，从图中可以看到，每次都达到了 28G。 查看集群数据总量 1 GET /_cat/allocation?v&amp;amp;h=shards,disk.indices,disk.used,disk.avail 查看各节点的</description>
    </item>
    
    <item>
      <title>Elasticsearch 7.4 Full Stack</title>
      <link>http://www.honlyc.com/post/elasticsearch-7.4.0-full-stack/</link>
      <pubDate>Tue, 24 Mar 2020 09:51:18 +0800</pubDate>
      
      <guid>http://www.honlyc.com/post/elasticsearch-7.4.0-full-stack/</guid>
      <description>[TOC] Overview Stack monitoring 普通版本的集群，无法做到多集群集合监控。 Metricbeat</description>
    </item>
    
    <item>
      <title>Docker 部署 Elasticsearch 7.4.0 集群并添加安全认证</title>
      <link>http://www.honlyc.com/post/elasticsearch-7.4.0-auth/</link>
      <pubDate>Mon, 16 Mar 2020 20:48:13 +0800</pubDate>
      
      <guid>http://www.honlyc.com/post/elasticsearch-7.4.0-auth/</guid>
      <description>本文主要介绍基于Docker部署时，Elasticsearch如何添加认证。 主要步骤 1. 生成认证秘钥 使用一个镜像，专门生成一个秘钥，使用p12</description>
    </item>
    
    <item>
      <title>Ambari 自定义告警通知</title>
      <link>http://www.honlyc.com/post/ambari-custom-alert-notification/</link>
      <pubDate>Fri, 13 Mar 2020 19:52:02 +0800</pubDate>
      
      <guid>http://www.honlyc.com/post/ambari-custom-alert-notification/</guid>
      <description>Ambari 自定义告警通知 创建一个自定义告警通知项： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 curl -i -u admin:admin -H &amp;#39;X-Requested-By: ambari&amp;#39; -X POST &amp;#34;http://ambari-server:8080/api/v1/alert_targets&amp;#34; -d &amp;#39; { &amp;#34;AlertTarget&amp;#34;: { &amp;#34;name&amp;#34;: &amp;#34;test_dispatcher&amp;#34;, &amp;#34;description&amp;#34;: &amp;#34;Custom Notification Dispatcher&amp;#34;, &amp;#34;notification_type&amp;#34;: &amp;#34;ALERT_SCRIPT&amp;#34;, &amp;#34;global&amp;#34;: true, &amp;#34;alert_states&amp;#34;: [&amp;#34;CRITICAL&amp;#34;,&amp;#34;WARNING&amp;#34;,&amp;#34;UNKNOWN&amp;#34;,&amp;#34;OK&amp;#34;], &amp;#34;properties&amp;#34;: { &amp;#34;ambari.dispatch-property.script&amp;#34;: &amp;#34;notification.dispatch.alert.script&amp;#34; } } } 编</description>
    </item>
    
    <item>
      <title>Centos Init</title>
      <link>http://www.honlyc.com/post/centos-init/</link>
      <pubDate>Thu, 20 Feb 2020 14:58:46 +0800</pubDate>
      
      <guid>http://www.honlyc.com/post/centos-init/</guid>
      <description>Docker Step1: Update 1  sudo yum check-update   Step2: Install the Dependencies 1  sudo yum install -y yum-utils device-mapper-persistent-data lvm2   Step3: Add the Docker Repository to CentOS 1  sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo   Step4: Install Docker 1  sudo yum install docker   Step5: Install Docker-compose 1 2 3  sudo curl -L &amp;#34;https://github.com/docker/compose/releases/download/1.25.3/docker-compose-$(uname -s)-$(uname -m)&amp;#34; -o /usr/local/bin/docker-compose sudo chmod +x /usr/local/bin/docker-compose   </description>
    </item>
    
    <item>
      <title>Ambari 的安装</title>
      <link>http://www.honlyc.com/post/ambari-in-action-1/</link>
      <pubDate>Thu, 20 Feb 2020 14:49:01 +0800</pubDate>
      
      <guid>http://www.honlyc.com/post/ambari-in-action-1/</guid>
      <description>[TOC] 因为各种原因，如果直接用Ambari的官方包进行安装时，速度会极慢，而官方本身也是支持离线安装的。所以，本文使用离线安装的方式。 一、下载离</description>
    </item>
    
    <item>
      <title>私有 GitLab 仓库 &#43; picGo 快速实现图床</title>
      <link>http://www.honlyc.com/post/picgo-private-gitlab/</link>
      <pubDate>Tue, 19 Nov 2019 13:49:59 +0800</pubDate>
      
      <guid>http://www.honlyc.com/post/picgo-private-gitlab/</guid>
      <description>文章写完了，才发现Gitlab是可以直接粘贴图片的&amp;hellip;（逃&amp;hellip;.. 公司有自己的私有Gitlab库，但是没有自己的图床</description>
    </item>
    
    <item>
      <title>Custom Elasticsearch Shard Allocation Decider</title>
      <link>http://www.honlyc.com/post/elasticsearch-decider-custom/</link>
      <pubDate>Tue, 05 Nov 2019 16:08:31 +0800</pubDate>
      
      <guid>http://www.honlyc.com/post/elasticsearch-decider-custom/</guid>
      <description>[TOC] 场景 对于一台机器部署了多个ES实例时，在分配Shard时，可能会存在热点的情况，如下图： 在同一台机器上的不同实例上，分配了两个Primar</description>
    </item>
    
    <item>
      <title>Elasticsearch 6.1.4 upgrade to 7.4.0</title>
      <link>http://www.honlyc.com/post/elasticsearch-6.1.4-upgrade-to-7.4.0-problem/</link>
      <pubDate>Wed, 09 Oct 2019 14:18:00 +0800</pubDate>
      
      <guid>http://www.honlyc.com/post/elasticsearch-6.1.4-upgrade-to-7.4.0-problem/</guid>
      <description>[TOC] 1. 集群改动 1. Zen Discovery 改动 不再有discovery.zen.minimum_master_nodes这个控制集群脑裂的配置，转而由集群自主控制，</description>
    </item>
    
    <item>
      <title>解决 Golang https 请求时，x509: certificate signed by unknown authority 问题</title>
      <link>http://www.honlyc.com/post/golang-x509-certificate-unknown-authority/</link>
      <pubDate>Fri, 23 Aug 2019 14:17:17 +0800</pubDate>
      
      <guid>http://www.honlyc.com/post/golang-x509-certificate-unknown-authority/</guid>
      <description>在使用http请求https://**网站时，报了x509: certificate signed by unknown authority这个错误。经查阅，是由于目标网站的CA证书在本机没有，</description>
    </item>
    
    <item>
      <title>Elasticsearch Unassigned Process</title>
      <link>http://www.honlyc.com/post/elasticsearch-unassigned-process/</link>
      <pubDate>Fri, 02 Aug 2019 14:18:00 +0800</pubDate>
      
      <guid>http://www.honlyc.com/post/elasticsearch-unassigned-process/</guid>
      <description>问题 在使用ES时，有时候在服务器突然挂掉后重启时，会导致有Shard的状态变成 了UNASSIGEND,此时，本身集群的数据是不准确的，因为这</description>
    </item>
    
    <item>
      <title>Ubuntu Init</title>
      <link>http://www.honlyc.com/post/ubuntu-init/</link>
      <pubDate>Tue, 23 Jul 2019 09:53:35 +0800</pubDate>
      
      <guid>http://www.honlyc.com/post/ubuntu-init/</guid>
      <description>[TOC] sudo 不需要输入密码 1 sudo vi /etc/sudoers 找到%sudo ALL=(ALL:ALL) ALL这一行，修改为：%sudo ALL=(ALL:ALL) NOPASSWD:ALL; 这样，所有sudo组内的用户使用sudo就不需要输入密码啦。</description>
    </item>
    
    <item>
      <title>Linux 中分析超大 JVM dump 文件</title>
      <link>http://www.honlyc.com/post/linux-hrpof/</link>
      <pubDate>Thu, 13 Jun 2019 17:24:05 +0800</pubDate>
      
      <guid>http://www.honlyc.com/post/linux-hrpof/</guid>
      <description>1. 场景 在使用Elasticsearch时，碰到内存溢出的情况，因为配置了-XX:+HeapDumpOnOutOfMemoryError索引会</description>
    </item>
    
    <item>
      <title>Gin 和 Vue 项目打包静态文件</title>
      <link>http://www.honlyc.com/post/go-web-vue-static-embed/</link>
      <pubDate>Tue, 16 Apr 2019 17:14:49 +0800</pubDate>
      
      <guid>http://www.honlyc.com/post/go-web-vue-static-embed/</guid>
      <description>在使用 Go 语言带来的便利时，我们往往也热衷于打包成单一的可执行文件，这样不仅方便传输，也便于维护。 如果是普通的Go程序，倒是直接可以编译成可执</description>
    </item>
    
    <item>
      <title>Go Web 读取配置文件</title>
      <link>http://www.honlyc.com/post/go-web-config/</link>
      <pubDate>Sat, 06 Apr 2019 22:08:54 +0800</pubDate>
      
      <guid>http://www.honlyc.com/post/go-web-config/</guid>
      <description>Viper 简介 viper是spf13大神开发的开源配置解决方案，另外docker kubernetes等项目都在用的命令行解决方案cobra也是出自他</description>
    </item>
    
    <item>
      <title>Hugo 常用修改</title>
      <link>http://www.honlyc.com/post/hugo-custom-favicon/</link>
      <pubDate>Thu, 04 Apr 2019 17:50:09 +0800</pubDate>
      
      <guid>http://www.honlyc.com/post/hugo-custom-favicon/</guid>
      <description>favicon 使用Hugo搭建博客后，一般在使用了Theme后，会自带一个favicon，不过使用自己的会更(zhuang)好(13)。 其实使用这个很简</description>
    </item>
    
    <item>
      <title>Spring Webflux 获取请求 IP 的方法</title>
      <link>http://www.honlyc.com/post/spring-webflux-remote-ip/</link>
      <pubDate>Thu, 04 Apr 2019 15:39:44 +0800</pubDate>
      
      <guid>http://www.honlyc.com/post/spring-webflux-remote-ip/</guid>
      <description>问题描述 在使用WebFlux时，因为业务需要，要获取请求 IP 并作为日志输出。我使用的是RouterFunction方式的路由： 1 2 3 4 5 6 7 8</description>
    </item>
    
    <item>
      <title>使用 Go 来进行远程执行命令</title>
      <link>http://www.honlyc.com/post/go-ssh-guide/</link>
      <pubDate>Wed, 03 Apr 2019 15:42:14 +0800</pubDate>
      
      <guid>http://www.honlyc.com/post/go-ssh-guide/</guid>
      <description>封装一个Cli类，来作为主要执行的对象 1 2 3 4 5 6 7 8 type Cli struct { IP string //IP地址 Username string //用户名 Password string //密码 Port int //端口号 client *ssh.Client //ssh客户端 LastResult</description>
    </item>
    
    <item>
      <title>Git 基本使用</title>
      <link>http://www.honlyc.com/post/first/</link>
      <pubDate>Mon, 01 Apr 2019 17:11:16 +0800</pubDate>
      
      <guid>http://www.honlyc.com/post/first/</guid>
      <description>1. Git push 需要填写密码的问题</description>
    </item>
    
  </channel>
</rss>
